SessionInterface { sessionId: string, genNo: number, acSession: { sessionId: string; genNo: number; } }

customCssInterface { variables: import("/Users/justin.mathew/Documents/source/ts_code_workspace/visual-embed-sdk/src/css-variables").CustomCssVariables, rules_UNSTABLE: { [selector: string]: { [declaration: string]: string; }; } }

CustomStyles { customCSSUrl: string, customCSS: import("/Users/justin.mathew/Documents/source/ts_code_workspace/visual-embed-sdk/src/types").customCssInterface }

CustomisationsInterface { style: import("/Users/justin.mathew/Documents/source/ts_code_workspace/visual-embed-sdk/src/types").CustomStyles, content: { [key: string]: any; strings?: Record<string, any>; }, iconSpriteUrl: string }

EmbedConfig { thoughtSpotHost: string, authType: import("/Users/justin.mathew/Documents/source/ts_code_workspace/visual-embed-sdk/src/types").AuthType, authEndpoint: string, getAuthToken: () => Promise<string>, username: string, password: string, noRedirect: boolean, inPopup: boolean, redirectPath: string, basepath: string, shouldEncodeUrlQueryParams: boolean, suppressNoCookieAccessAlert: boolean, ignoreNoCookieAccess: boolean, autoLogin: boolean, disableLoginRedirect: boolean, loginFailedMessage: string, callPrefetch: boolean, queueMultiRenders: boolean, detectCookieAccessSlow: boolean, suppressSearchEmbedBetaWarning: boolean, suppressSageEmbedBetaWarning: boolean, customizations: import("/Users/justin.mathew/Documents/source/ts_code_workspace/visual-embed-sdk/src/types").CustomisationsInterface, authTriggerContainer: string, useEventForSAMLPopup: boolean, authTriggerText: string, blockNonEmbedFullAppAccess: boolean, hostConfig: { hostUserGuid: string; hostClusterId: string; hostClusterName: string; }, pendoTrackingKey: string, suppressErrorAlerts: boolean, logLevel: import("/Users/justin.mathew/Documents/source/ts_code_workspace/visual-embed-sdk/src/types").LogLevel, disableSDKTracking: boolean, dateFormatLocale: string, numberFormatLocale: string, currencyFormat: string, disableTokenVerification: boolean, disableLoginFailurePage: boolean, additionalFlags: { [key: string]: string | number | boolean; }, customVariablesForThirdPartyTools: Record<string, any>, disablePreauthCache: boolean }

LayoutConfig {  }

FrameParams { width: string | number, height: string | number, loading: "lazy" | "eager" | "auto" }

ViewConfig { layoutConfig: import("/Users/justin.mathew/Documents/source/ts_code_workspace/visual-embed-sdk/src/types").LayoutConfig, frameParams: import("/Users/justin.mathew/Documents/source/ts_code_workspace/visual-embed-sdk/src/types").FrameParams, theme: string, styleSheet__unstable: string, disabledActions: import("/Users/justin.mathew/Documents/source/ts_code_workspace/visual-embed-sdk/src/types").Action[], disabledActionReason: string, hiddenActions: import("/Users/justin.mathew/Documents/source/ts_code_workspace/visual-embed-sdk/src/types").Action[], visibleActions: import("/Users/justin.mathew/Documents/source/ts_code_workspace/visual-embed-sdk/src/types").Action[], showAlerts: boolean, runtimeFilters: import("/Users/justin.mathew/Documents/source/ts_code_workspace/visual-embed-sdk/src/types").RuntimeFilter[], runtimeParameters: import("/Users/justin.mathew/Documents/source/ts_code_workspace/visual-embed-sdk/src/types").RuntimeParameter[], locale: string, additionalFlags: { [key: string]: string | number | boolean; }, customizations: import("/Users/justin.mathew/Documents/source/ts_code_workspace/visual-embed-sdk/src/types").CustomisationsInterface, insertAsSibling: boolean, contextMenuTrigger: import("/Users/justin.mathew/Documents/source/ts_code_workspace/visual-embed-sdk/src/types").ContextMenuTriggerOptions, linkOverride: boolean, insertInToSlide: boolean, usePrerenderedIfAvailable: boolean, excludeRuntimeFiltersfromURL: boolean, hiddenTabs: string[], hiddenHomepageModules: import("/Users/justin.mathew/Documents/source/ts_code_workspace/visual-embed-sdk/src/types").HomepageModule[], reorderedHomepageModules: import("/Users/justin.mathew/Documents/source/ts_code_workspace/visual-embed-sdk/src/types").HomepageModule[], visibleTabs: string[], hiddenHomeLeftNavItems: import("/Users/justin.mathew/Documents/source/ts_code_workspace/visual-embed-sdk/src/types").HomeLeftNavItem[], preRenderId: string, doNotTrackPreRenderSize: boolean, embedComponentType: string, excludeRuntimeParametersfromURL: boolean, enableV2Shell_experimental: boolean, collapseSearchBar: boolean, disableRedirectionLinksInNewTab: boolean, dataPanelV2: boolean, enableCustomColumnGroups: boolean, overrideOrgId: number }

RuntimeFilter { columnName: string, operator: import("/Users/justin.mathew/Documents/source/ts_code_workspace/visual-embed-sdk/src/types").RuntimeFilterOp, values: (string | number | bigint | boolean)[] }

RuntimeParameter { name: string, value: string | number | boolean }

AnswerServiceType { getAnswer: (offset: number, batchSize: number) => any }

ColumnValue { column: { [key: string]: any; id: string; name: string; dataType: string; }, value: string | number | boolean | { v: { s: number; e: number; }; } }

VizPoint { selectedAttributes: import("/Users/justin.mathew/Documents/source/ts_code_workspace/visual-embed-sdk/src/types").ColumnValue[], selectedMeasures: import("/Users/justin.mathew/Documents/source/ts_code_workspace/visual-embed-sdk/src/types").ColumnValue[] }

CustomActionPayload { contextMenuPoints: { clickedPoint: import("/Users/justin.mathew/Documents/source/ts_code_workspace/visual-embed-sdk/src/types").VizPoint; selectedPoints: import("/Users/justin.mathew/Documents/source/ts_code_workspace/visual-embed-sdk/src/types").VizPoint[]; }, embedAnswerData: { [key: string]: any; name: string; id: string; sources: { header: { guid: string; }; }; columns: any[]; data: any[]; }, session: import("/Users/justin.mathew/Documents/source/ts_code_workspace/visual-embed-sdk/src/types").SessionInterface, vizId: string }

DefaultAppInitData { customisations: import("/Users/justin.mathew/Documents/source/ts_code_workspace/visual-embed-sdk/src/types").CustomisationsInterface, authToken: string, runtimeFilterParams: string, runtimeParameterParams: string, hiddenHomepageModules: import("/Users/justin.mathew/Documents/source/ts_code_workspace/visual-embed-sdk/src/types").HomepageModule[], reorderedHomepageModules: string[], hostConfig: Record<string, any>, hiddenHomeLeftNavItems: string[], customVariablesForThirdPartyTools: Record<string, any> }